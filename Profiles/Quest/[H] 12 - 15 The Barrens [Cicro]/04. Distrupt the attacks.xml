<ShadowProfile Condition="Data.HasCompletedQuest('Disrupt the Attacks', 871) == false">

	<!-- Bot Settings -->
	<SetBaseSettings />
	<Lua>settings.DoNotSellItems = {}</Lua>
	<SetEnableAutoHerb Value="true" />
	<SetEnableAutoSkin Value="true" />
	<SetEnableAutoMine Value="true" />
	<SetEnableProfileIgnoreCombat Value="false"/>
    <SetEnableUseFood Value="true" />
    <SetEnableUseDrink Value="true" />
    <SetEnableAutoDetectFood Value="true" />
    <SetEnableAutoDetectDrink Value="true" />
    <SetEnableVendoring Value="true"/>
    <SetEnableRepairing Value="true"/>
    <SetVendorSlotsCount Value="2"/>
    <SetRepairPercent Value="40"/>
    <SetEnableRest Value="true"/>
    <SetEnableVendorGreens Value="true"/>
    <SetEnableIgnoreLootAroundMobs Value="true"/>
    <SetEnablePreemptiveMonsterAttack Value="true"/>
	<SetEnableAutoLoot Value="true" />


	<!-- Rest Settings -->
	<!-- Rogue -->	
    <If Condition="Data.PlayerClass() == WoWClass.Rogue">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="0" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="0" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Hunter -->	
	<If Condition="Data.PlayerClass() == WoWClass.Hunter">
	<SetRestHPPercent Value="55" />
	<SetRestPWPercent Value="15" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="40" />
	<SetUseFoodPercent Value="60" />
    </If>
	<!-- Mage -->	
	<If Condition="Data.PlayerClass() == WoWClass.Mage">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="25" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="60" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Warrior -->
	<If Condition="Data.PlayerClass() == WoWClass.Warrior">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="0" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="0" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Warlock -->
	<If Condition="Data.PlayerClass() == WoWClass.Warlock">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="25" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="60" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Priest -->	
	<If Condition="Data.PlayerClass() == WoWClass.Priest">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="25" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="50" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Shaman -->
	<If Condition="Data.PlayerClass() == WoWClass.Shaman">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="10" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="50" />
	<SetUseFoodPercent Value="69" />
    </If>
	<!-- Druid -->
	<If Condition="Data.PlayerClass() == WoWClass.Druid and UnitLevel('player') &lt; 10">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="25" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="50" />
	<SetUseFoodPercent Value="69" />
    </If>	
	<!-- Druid -->
	<If Condition="Data.PlayerClass() == WoWClass.Druid and UnitLevel('player') &gt;= 10">
	<SetRestHPPercent Value="65" />
	<SetRestPWPercent Value="15" />
	<SetRestPetHPPercent Value="0" />
	<SetUseDrinkPercent Value="25" />
	<SetUseFoodPercent Value="69" />
    </If>	
	<!-- Rest Settings End -->
	<!-- Vendors to use -->
	<SetVendorNpc NpcName="Nargal Deatheye" />
	<SetRepairNpc NpcName="Nargal Deatheye" />	
	<!-- Local Do not sell Items -->

	<!-- Restock Crossroads 12+ -->
	<SetEnableRestockItems Value="true"/>
	<ClearRestockItems/>
	<!-- Food -->
	<If Condition="Data.PlayerClass() == WoWClass.Rogue or Data.PlayerClass() == WoWClass.Warrior or Data.PlayerClass() == WoWClass.Warlock or Data.PlayerClass() == WoWClass.Shaman or Data.PlayerClass() == WoWClass.Priest">
		<AddRestockItem ItemName="Shiny Red Apple" NpcName="Innkeeper Boorand Plainswind" UnderAmount="5" BuyAmount="40"/>
		<AddDoNotSellItem ItemName="Shiny Red Apple" />
	</If>
	<If Condition="Data.PlayerClass() == WoWClass.Hunter">
		<AddRestockItem ItemName="Shiny Red Apple" NpcName="Innkeeper Boorand Plainswind" UnderAmount="5" BuyAmount="60"/>
		<AddDoNotSellItem ItemName="Shiny Red Apple" />
		<Lua>settings.ShouldFeedPet = true</Lua>
		<Lua>settings.ShouldFeedPetFoodsStr = "Shiny Red Apple" </Lua>		
	</If>	
	<!-- Water -->
	<If Condition="Data.PlayerClass() == WoWClass.Druid or Data.PlayerClass() == WoWClass.Hunter or Data.PlayerClass() == WoWClass.Warlock or Data.PlayerClass() == WoWClass.Shaman">
		<AddRestockItem ItemName="Refreshing Spring Water" NpcName="Innkeeper Boorand Plainswind" UnderAmount="5" BuyAmount="40"/>
		<AddDoNotSellItem ItemName="Refreshing Spring Water" />
	</If>
	<If Condition="Data.PlayerClass() == WoWClass.Priest">
		<AddRestockItem ItemName="Refreshing Spring Water" NpcName="Innkeeper Boorand Plainswind" UnderAmount="3" BuyAmount="20"/>
		<AddDoNotSellItem ItemName="Refreshing Spring Water" />
	</If>
	<!-- Bullets/Arrows -->
	<If Condition="IsEquippedItemType('Gun') == true and Data.PlayerClass() == WoWClass.Hunter">
		<AddRestockItem ItemName="Heavy Shot" NpcName="Uthrok" UnderAmount="100" BuyAmount="800"/>
	</If>
	<If Condition="IsEquippedItemType('Bow') == true and Data.PlayerClass() == WoWClass.Hunter">
		<AddRestockItem ItemName="Sharp Arrow" NpcName="Uthrok" UnderAmount="100" BuyAmount="800"/>
	</If>
	<If Condition="IsEquippedItemType('Crossbow') == true and Data.PlayerClass() == WoWClass.Hunter">
		<AddRestockItem ItemName="Sharp Arrow" NpcName="Uthrok" UnderAmount="100" BuyAmount="800"/>
	</If>
	<!-- End Restock -->

	<If Condition="Data.HasActiveQuest('Disrupt the Attacks', 871) == false and Data.HasCompletedQuest('Disrupt the Attacks', 871) == false">
		<TakeQuest NpcName="Thork" QuestId="871" QuestName="Disrupt the Attacks" DestinationMap="1" />
	</If>
	<If Condition="Data.HasActiveQuest('Disrupt the Attacks', 871) == true and Data.AllQuestObjectivesAreComplete('Disrupt the Attacks', 871) == false">
		<!-- Objective Settings -->
		<ClearHotspots />
		<SetTargetingMode Mode="Around Points" />
		<!-- Monsterfilter -->
		<ClearMonsterFilter/>
		<SetMonsterFilterMode Mode="None" />
		<!-- Blackspots -->
		<AddBlackspot X="-193.35580444336" Y="-3027.4104003906" Z="91.667060852051" Range="25" />
		<AddBlackspot X="-220.83528137207" Y="-3003.3659667969" Z="91.667297363281" Range="25" />
		<!-- Hotspots -->
		<AddHotspot X="-77.96794128418" Y="-2787.3901367188" Z="95.259094238281" Range="100" />
		<AddHotspot X="-175.08456420898" Y="-2910.3505859375" Z="93.494445800781" Range="100" />
		<AddHotspot X="-109.21524047852" Y="-2982.7412109375" Z="91.666763305664" Range="100" />
		<While Condition="Data.AllQuestObjectivesAreComplete('Disrupt the Attacks', 871) == false" >
			<Wait Value="100" />
		</While>
	</If>
	<If Condition="Data.HasActiveQuest('Call of Fire', 1525) == true and Data.QuestObjectiveIsComplete('Call of Fire', 1, 1525) == false and Data.PlayerClass() == WoWClass.Shaman">
		<!-- Objective Settings -->
		<ClearHotspots />
		<SetTargetingMode Mode="Around Points" />
		<!-- Monsterfilter -->
		<ClearMonsterFilter/>
		<!-- Blackspots -->
		<AddBlackspot X="-193.35580444336" Y="-3027.4104003906" Z="91.667060852051" Range="25" />
		<AddBlackspot X="-220.83528137207" Y="-3003.3659667969" Z="91.667297363281" Range="25" />
		<!-- Hotspots -->
		<AddHotspot X="-77.96794128418" Y="-2787.3901367188" Z="95.259094238281" Range="100" />
		<AddHotspot X="-175.08456420898" Y="-2910.3505859375" Z="93.494445800781" Range="100" />
		<AddHotspot X="-109.21524047852" Y="-2982.7412109375" Z="91.666763305664" Range="100" />
		<While Condition="Data.QuestObjectiveIsComplete('Call of Fire', 1, 1525) == false" >
			<Wait Value="100" />
		</While>
	</If>    
	<If Condition="Data.HasActiveQuest('Disrupt the Attacks', 871) == true and Data.AllQuestObjectivesAreComplete('Disrupt the Attacks', 871) == true">
		<ReturnQuest NpcName="Thork" QuestId="871" QuestName="Disrupt the Attacks" DestinationMap="1" />
	</If>
	<If Condition="Data.HasActiveQuest('The Disruption Ends', 872) == false and Data.HasCompletedQuest('The Disruption Ends', 872) == false">
		<TakeQuest NpcName="Thork" QuestId="872" QuestName="The Disruption Ends" DestinationMap="1" />
	</If>
</ShadowProfile>

